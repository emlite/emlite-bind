[package]
name = "webbind"
version = "0.1.30"
edition = "2024"
description = "Rust bindings for the web api, auto-generated from WebIDL"
documentation = "https://docs.rs/webbind"
license = "MIT"
readme = "../README.md"
repository = "https://github.com/emlite/emlite-bind"
keywords = ["wasm", "wasi", "polyfill", "shim", "bindings"]
categories = ["api-bindings", "wasm"]

[dependencies]
jsbind = { version = "=0.1.30", path = "../jsbind" }

# [features]
# default = ["enums"]
# window = []
# enums = []
# ANGLE_instanced_arrays = []
# AacEncoderConfig = []
# AbortController = []
# AbortSignal = ["EventTarget"]
# AbsoluteOrientationSensor = ["OrientationSensor"]
# AbstractRange = []
# Accelerometer = ["Sensor"]
# AccelerometerSensorOptions = ["SensorOptions"]
# AdAuctionData = []
# AdAuctionDataBuyerConfig = []
# AdAuctionDataConfig = []
# AdAuctionOneSeller = []
# AdAuctionPerSellerData = []
# AdRender = []
# AddEventListenerOptions = ["EventListenerOptions"]
# AddressErrors = []
# AddressInit = []
# AesCbcParams = ["Algorithm"]
# AesCtrParams = ["Algorithm"]
# AesDerivedKeyParams = ["Algorithm"]
# AesGcmParams = ["Algorithm"]
# AesKeyAlgorithm = ["KeyAlgorithm"]
# AesKeyGenParams = ["Algorithm"]
# Algorithm = []
# AllAcceptedCredentialsOptions = []
# AllowedBluetoothDevice = []
# AllowedUSBDevice = []
# AmbientLightSensor = ["Sensor"]
# AnalyserNode = ["AudioNode"]
# AnalyserOptions = ["AudioNodeOptions"]
# Animation = ["EventTarget"]
# AnimationEffect = []
# AnimationEvent = ["Event"]
# AnimationEventInit = ["EventInit"]
# AnimationNodeList = []
# AnimationPlaybackEvent = ["Event"]
# AnimationPlaybackEventInit = ["EventInit"]
# AnimationTimeline = []
# AnimationTrigger = []
# AnimationTriggerOptions = []
# AnimationWorkletGlobalScope = ["WorkletGlobalScope"]
# AssignedNodesOptions = []
# Attr = ["Node"]
# Attribution = []
# AttributionAggregationService = []
# AttributionAggregationServices = []
# AttributionConversionOptions = []
# AttributionConversionResult = []
# AttributionImpressionOptions = []
# AttributionImpressionResult = []
# AttributionReportingRequestOptions = []
# AuctionAd = []
# AuctionAdConfig = []
# AuctionAdInterestGroup = ["GenerateBidInterestGroup"]
# AuctionAdInterestGroupKey = []
# AuctionAdInterestGroupSize = []
# AuctionRealTimeReportingConfig = []
# AuctionReportBuyerDebugModeConfig = []
# AuctionReportBuyersConfig = []
# AudioBuffer = []
# AudioBufferOptions = []
# AudioBufferSourceNode = ["AudioScheduledSourceNode"]
# AudioBufferSourceOptions = []
# AudioConfiguration = []
# AudioContext = ["BaseAudioContext"]
# AudioContextOptions = []
# AudioData = []
# AudioDataCopyToOptions = []
# AudioDataInit = []
# AudioDecoder = ["EventTarget"]
# AudioDecoderConfig = []
# AudioDecoderInit = []
# AudioDecoderSupport = []
# AudioDestinationNode = ["AudioNode"]
# AudioEncoder = ["EventTarget"]
# AudioEncoderConfig = []
# AudioEncoderInit = []
# AudioEncoderSupport = []
# AudioListener = []
# AudioNode = ["EventTarget"]
# AudioNodeOptions = []
# AudioOutputOptions = []
# AudioParam = []
# AudioParamDescriptor = []
# AudioParamMap = []
# AudioProcessingEvent = ["Event"]
# AudioProcessingEventInit = ["EventInit"]
# AudioScheduledSourceNode = ["AudioNode"]
# AudioSession = ["EventTarget"]
# AudioSinkInfo = []
# AudioSinkOptions = []
# AudioTimestamp = []
# AudioTrack = []
# AudioTrackList = ["EventTarget"]
# AudioWorklet = ["Worklet"]
# AudioWorkletGlobalScope = ["WorkletGlobalScope"]
# AudioWorkletNode = ["AudioNode"]
# AudioWorkletNodeOptions = ["AudioNodeOptions"]
# AudioWorkletProcessor = []
# AuthenticationExtensionsClientInputs = []
# AuthenticationExtensionsClientInputsJSON = []
# AuthenticationExtensionsClientOutputs = []
# AuthenticationExtensionsClientOutputsJSON = []
# AuthenticationExtensionsLargeBlobInputs = []
# AuthenticationExtensionsLargeBlobInputsJSON = []
# AuthenticationExtensionsLargeBlobOutputs = []
# AuthenticationExtensionsLargeBlobOutputsJSON = []
# AuthenticationExtensionsPRFInputs = []
# AuthenticationExtensionsPRFInputsJSON = []
# AuthenticationExtensionsPRFOutputs = []
# AuthenticationExtensionsPRFOutputsJSON = []
# AuthenticationExtensionsPRFValues = []
# AuthenticationExtensionsPRFValuesJSON = []
# AuthenticationExtensionsPaymentInputs = []
# AuthenticationExtensionsPaymentOutputs = []
# AuthenticationResponseJSON = []
# AuthenticatorAssertionResponse = ["AuthenticatorResponse"]
# AuthenticatorAssertionResponseJSON = []
# AuthenticatorAttestationResponse = ["AuthenticatorResponse"]
# AuthenticatorAttestationResponseJSON = []
# AuthenticatorResponse = []
# AuthenticatorSelectionCriteria = []
# AvcEncoderConfig = []
# BackgroundFetchEvent = ["ExtendableEvent"]
# BackgroundFetchEventInit = ["ExtendableEventInit"]
# BackgroundFetchManager = []
# BackgroundFetchOptions = ["BackgroundFetchUIOptions"]
# BackgroundFetchRecord = []
# BackgroundFetchRegistration = ["EventTarget"]
# BackgroundFetchUIOptions = []
# BackgroundFetchUpdateUIEvent = ["BackgroundFetchEvent"]
# BackgroundSyncOptions = []
# BarProp = []
# BarcodeDetector = []
# BarcodeDetectorOptions = []
# BaseAudioContext = ["EventTarget"]
# BaseComputedKeyframe = []
# BaseKeyframe = []
# BasePropertyIndexedKeyframe = []
# Baseline = []
# BatteryManager = ["EventTarget"]
# BeforeInstallPromptEvent = ["Event"]
# BeforeUnloadEvent = ["Event"]
# BiddingBrowserSignals = []
# BiquadFilterNode = ["AudioNode"]
# BiquadFilterOptions = ["AudioNodeOptions"]
# Blob = []
# BlobEvent = ["Event"]
# BlobEventInit = ["EventInit"]
# BlobPropertyBag = []
# Bluetooth = ["EventTarget"]
# BluetoothAdvertisingEvent = ["Event"]
# BluetoothAdvertisingEventInit = ["EventInit"]
# BluetoothCharacteristicProperties = []
# BluetoothDataFilter = []
# BluetoothDataFilterInit = []
# BluetoothDevice = ["EventTarget"]
# BluetoothLEScan = []
# BluetoothLEScanFilter = []
# BluetoothLEScanFilterInit = []
# BluetoothLEScanOptions = []
# BluetoothLEScanPermissionDescriptor = ["PermissionDescriptor"]
# BluetoothLEScanPermissionResult = ["PermissionStatus"]
# BluetoothManufacturerDataFilter = []
# BluetoothManufacturerDataFilterInit = ["BluetoothDataFilterInit"]
# BluetoothManufacturerDataMap = []
# BluetoothPermissionDescriptor = ["PermissionDescriptor"]
# BluetoothPermissionResult = ["PermissionStatus"]
# BluetoothPermissionStorage = []
# BluetoothRemoteGATTCharacteristic = ["EventTarget"]
# BluetoothRemoteGATTDescriptor = []
# BluetoothRemoteGATTServer = []
# BluetoothRemoteGATTService = ["EventTarget"]
# BluetoothServiceDataFilter = []
# BluetoothServiceDataFilterInit = ["BluetoothDataFilterInit"]
# BluetoothServiceDataMap = []
# BluetoothUUID = []
# BoxQuadOptions = []
# BreakToken = []
# BreakTokenOptions = []
# BroadcastChannel = ["EventTarget"]
# BrowserBoundSignature = []
# BrowserCaptureMediaStreamTrack = ["MediaStreamTrack"]
# BufferedChangeEvent = ["Event"]
# BufferedChangeEventInit = ["EventInit"]
# ByteLengthQueuingStrategy = []
# CDATASection = ["Text"]
# CSPViolationReportBody = ["ReportBody"]
# CSS = []
# CSSAnimation = ["Animation"]
# CSSColor = ["CSSColorValue"]
# CSSColorProfileRule = ["CSSRule"]
# CSSColorValue = ["CSSStyleValue"]
# CSSConditionRule = ["CSSGroupingRule"]
# CSSContainerRule = ["CSSConditionRule"]
# CSSCounterStyleRule = ["CSSRule"]
# CSSFontFaceDescriptors = ["CSSStyleDeclaration"]
# CSSFontFaceRule = ["CSSRule"]
# CSSFontFeatureValuesMap = []
# CSSFontFeatureValuesRule = ["CSSRule"]
# CSSFontPaletteValuesRule = ["CSSRule"]
# CSSFunctionDeclarations = ["CSSRule"]
# CSSFunctionDescriptors = ["CSSStyleDeclaration"]
# CSSFunctionRule = ["CSSGroupingRule"]
# CSSGroupingRule = ["CSSRule"]
# CSSHSL = ["CSSColorValue"]
# CSSHWB = ["CSSColorValue"]
# CSSImageValue = ["CSSStyleValue"]
# CSSImportRule = ["CSSRule"]
# CSSKeyframeRule = ["CSSRule"]
# CSSKeyframesRule = ["CSSRule"]
# CSSKeywordValue = ["CSSStyleValue"]
# CSSLCH = ["CSSColorValue"]
# CSSLab = ["CSSColorValue"]
# CSSLayerBlockRule = ["CSSGroupingRule"]
# CSSLayerStatementRule = ["CSSRule"]
# CSSMarginRule = ["CSSRule"]
# CSSMathClamp = ["CSSMathValue"]
# CSSMathInvert = ["CSSMathValue"]
# CSSMathMax = ["CSSMathValue"]
# CSSMathMin = ["CSSMathValue"]
# CSSMathNegate = ["CSSMathValue"]
# CSSMathProduct = ["CSSMathValue"]
# CSSMathSum = ["CSSMathValue"]
# CSSMathValue = ["CSSNumericValue"]
# CSSMatrixComponent = ["CSSTransformComponent"]
# CSSMatrixComponentOptions = []
# CSSMediaRule = ["CSSConditionRule"]
# CSSNamespaceRule = ["CSSRule"]
# CSSNestedDeclarations = ["CSSRule"]
# CSSNumericArray = []
# CSSNumericType = []
# CSSNumericValue = ["CSSStyleValue"]
# CSSOKLCH = ["CSSColorValue"]
# CSSOKLab = ["CSSColorValue"]
# CSSPageDescriptors = ["CSSStyleDeclaration"]
# CSSPageRule = ["CSSGroupingRule"]
# CSSParserAtRule = ["CSSParserRule"]
# CSSParserBlock = ["CSSParserValue"]
# CSSParserDeclaration = ["CSSParserRule"]
# CSSParserFunction = ["CSSParserValue"]
# CSSParserOptions = []
# CSSParserQualifiedRule = ["CSSParserRule"]
# CSSParserRule = []
# CSSParserValue = []
# CSSPerspective = ["CSSTransformComponent"]
# CSSPositionTryDescriptors = ["CSSStyleDeclaration"]
# CSSPositionTryRule = ["CSSRule"]
# CSSPropertyRule = ["CSSRule"]
# CSSPseudoElement = ["EventTarget"]
# CSSRGB = ["CSSColorValue"]
# CSSRotate = ["CSSTransformComponent"]
# CSSRule = []
# CSSRuleList = []
# CSSScale = ["CSSTransformComponent"]
# CSSScopeRule = ["CSSGroupingRule"]
# CSSSkew = ["CSSTransformComponent"]
# CSSSkewX = ["CSSTransformComponent"]
# CSSSkewY = ["CSSTransformComponent"]
# CSSStartingStyleRule = ["CSSGroupingRule"]
# CSSStyleDeclaration = []
# CSSStyleProperties = ["CSSStyleDeclaration"]
# CSSStyleRule = ["CSSGroupingRule"]
# CSSStyleSheet = ["StyleSheet"]
# CSSStyleSheetInit = []
# CSSStyleValue = []
# CSSSupportsRule = ["CSSConditionRule"]
# CSSTransformComponent = []
# CSSTransformValue = ["CSSStyleValue"]
# CSSTransition = ["Animation"]
# CSSTranslate = ["CSSTransformComponent"]
# CSSUnitValue = ["CSSNumericValue"]
# CSSUnparsedValue = ["CSSStyleValue"]
# CSSVariableReferenceValue = []
# CSSViewTransitionRule = ["CSSRule"]
# Cache = []
# CacheQueryOptions = []
# CacheStorage = []
# CameraDevicePermissionDescriptor = ["PermissionDescriptor"]
# CanMakePaymentEvent = ["ExtendableEvent"]
# CanvasCaptureMediaStreamTrack = ["MediaStreamTrack"]
# CanvasGradient = []
# CanvasPattern = []
# CanvasRenderingContext2D = []
# CanvasRenderingContext2DSettings = []
# CaptureActionEvent = ["Event"]
# CaptureActionEventInit = ["EventInit"]
# CaptureController = ["EventTarget"]
# CaptureHandle = []
# CaptureHandleConfig = []
# CapturedMouseEvent = ["Event"]
# CapturedMouseEventInit = ["EventInit"]
# CaretPosition = []
# CaretPositionFromPointOptions = []
# ChannelMergerNode = ["AudioNode"]
# ChannelMergerOptions = ["AudioNodeOptions"]
# ChannelSplitterNode = ["AudioNode"]
# ChannelSplitterOptions = ["AudioNodeOptions"]
# ChapterInformation = []
# ChapterInformationInit = []
# CharacterBoundsUpdateEvent = ["Event"]
# CharacterBoundsUpdateEventInit = ["EventInit"]
# CharacterData = ["Node"]
# CheckVisibilityOptions = []
# ChildBreakToken = []
# Client = []
# ClientQueryOptions = []
# Clients = []
# Clipboard = ["EventTarget"]
# ClipboardEvent = ["Event"]
# ClipboardEventInit = ["EventInit"]
# ClipboardItem = []
# ClipboardItemOptions = []
# ClipboardPermissionDescriptor = ["PermissionDescriptor"]
# ClipboardUnsanitizedFormats = []
# CloseEvent = ["Event"]
# CloseEventInit = ["EventInit"]
# CloseWatcher = ["EventTarget"]
# CloseWatcherOptions = []
# CollectedClientAdditionalPaymentData = []
# CollectedClientAdditionalPaymentRegistrationData = []
# CollectedClientData = []
# CollectedClientPaymentData = ["CollectedClientData"]
# ColorSelectionOptions = []
# ColorSelectionResult = []
# CommandEvent = ["Event"]
# CommandEventInit = ["EventInit"]
# Comment = ["CharacterData"]
# CompositionEvent = ["UIEvent"]
# CompositionEventInit = ["UIEventInit"]
# CompressionStream = []
# ComputedEffectTiming = ["EffectTiming"]
# ConstantSourceNode = ["AudioScheduledSourceNode"]
# ConstantSourceOptions = []
# ConstrainBooleanOrDOMStringParameters = []
# ConstrainBooleanParameters = []
# ConstrainDOMStringParameters = []
# ConstrainDoubleRange = ["DoubleRange"]
# ConstrainPoint2DParameters = []
# ConstrainULongRange = ["ULongRange"]
# ContactAddress = []
# ContactInfo = []
# ContactsManager = []
# ContactsSelectOptions = []
# ContentDescription = []
# ContentIndex = []
# ContentIndexEvent = ["ExtendableEvent"]
# ContentIndexEventInit = ["ExtendableEventInit"]
# ContentVisibilityAutoStateChangeEvent = ["Event"]
# ContentVisibilityAutoStateChangeEventInit = ["EventInit"]
# ConvertCoordinateOptions = []
# ConvolverNode = ["AudioNode"]
# ConvolverOptions = ["AudioNodeOptions"]
# CookieChangeEvent = ["Event"]
# CookieChangeEventInit = ["EventInit"]
# CookieInit = []
# CookieListItem = []
# CookieStore = ["EventTarget"]
# CookieStoreDeleteOptions = []
# CookieStoreGetOptions = []
# CookieStoreManager = []
# CountQueuingStrategy = []
# CrashReportBody = ["ReportBody"]
# CreateMonitor = ["EventTarget"]
# Credential = []
# CredentialCreationOptions = []
# CredentialData = []
# CredentialPropertiesOutput = []
# CredentialRequestOptions = []
# CredentialsContainer = []
# CropTarget = []
# Crypto = []
# CryptoKey = []
# CryptoKeyPair = []
# CurrentUserDetailsOptions = []
# CustomElementRegistry = []
# CustomEvent = ["Event"]
# CustomEventInit = ["EventInit"]
# CustomStateSet = []
# DOMException = []
# DOMImplementation = []
# DOMMatrix = ["DOMMatrixReadOnly"]
# DOMMatrix2DInit = []
# DOMMatrixInit = ["DOMMatrix2DInit"]
# DOMMatrixReadOnly = []
# DOMParser = []
# DOMPoint = ["DOMPointReadOnly"]
# DOMPointInit = []
# DOMPointReadOnly = []
# DOMQuad = []
# DOMQuadInit = []
# DOMRect = ["DOMRectReadOnly"]
# DOMRectInit = []
# DOMRectList = []
# DOMRectReadOnly = []
# DOMStringList = []
# DOMStringMap = []
# DOMTokenList = []
# DataCue = ["TextTrackCue"]
# DataTransfer = []
# DataTransferItem = []
# DataTransferItemList = []
# DecompressionStream = []
# DedicatedWorkerGlobalScope = ["WorkerGlobalScope"]
# DelayNode = ["AudioNode"]
# DelayOptions = ["AudioNodeOptions"]
# DelegatedInkTrailPresenter = []
# DeprecationReportBody = ["ReportBody"]
# DetectedBarcode = []
# DetectedFace = []
# DetectedText = []
# DeviceChangeEvent = ["Event"]
# DeviceChangeEventInit = ["EventInit"]
# DeviceMotionEvent = ["Event"]
# DeviceMotionEventAcceleration = []
# DeviceMotionEventAccelerationInit = []
# DeviceMotionEventInit = ["EventInit"]
# DeviceMotionEventRotationRate = []
# DeviceMotionEventRotationRateInit = []
# DeviceOrientationEvent = ["Event"]
# DeviceOrientationEventInit = ["EventInit"]
# DevicePosture = ["EventTarget"]
# DigitalCredential = ["Credential"]
# DigitalCredentialCreateRequest = []
# DigitalCredentialCreationOptions = []
# DigitalCredentialGetRequest = []
# DigitalCredentialRequestOptions = []
# DigitalGoodsService = []
# DirectFromSellerSignalsForBuyer = []
# DirectFromSellerSignalsForSeller = []
# DirectoryPickerOptions = []
# DisconnectedAccount = []
# DisplayMediaStreamOptions = []
# Document = ["Node"]
# DocumentFragment = ["Node"]
# DocumentPictureInPicture = ["EventTarget"]
# DocumentPictureInPictureEvent = ["Event"]
# DocumentPictureInPictureEventInit = ["EventInit"]
# DocumentPictureInPictureOptions = []
# DocumentTimeline = ["AnimationTimeline"]
# DocumentTimelineOptions = []
# DocumentType = ["Node"]
# DoubleRange = []
# DragEvent = ["MouseEvent"]
# DragEventInit = ["MouseEventInit"]
# DynamicsCompressorNode = ["AudioNode"]
# DynamicsCompressorOptions = ["AudioNodeOptions"]
# EXT_blend_minmax = []
# EXT_color_buffer_float = []
# EXT_color_buffer_half_float = []
# EXT_disjoint_timer_query = []
# EXT_disjoint_timer_query_webgl2 = []
# EXT_float_blend = []
# EXT_frag_depth = []
# EXT_sRGB = []
# EXT_shader_texture_lod = []
# EXT_texture_compression_bptc = []
# EXT_texture_compression_rgtc = []
# EXT_texture_filter_anisotropic = []
# EXT_texture_norm16 = []
# EcKeyAlgorithm = ["KeyAlgorithm"]
# EcKeyGenParams = ["Algorithm"]
# EcKeyImportParams = ["Algorithm"]
# EcdhKeyDeriveParams = ["Algorithm"]
# EcdsaParams = ["Algorithm"]
# Ed448Params = ["Algorithm"]
# EditContext = ["EventTarget"]
# EditContextInit = []
# EffectTiming = []
# Element = ["Node", "CSSStyleProperties"]
# ElementCreationOptions = []
# ElementDefinitionOptions = []
# ElementInternals = []
# EncodedAudioChunk = []
# EncodedAudioChunkInit = []
# EncodedAudioChunkMetadata = []
# EncodedVideoChunk = []
# EncodedVideoChunkInit = []
# EncodedVideoChunkMetadata = []
# ErrorEvent = ["Event"]
# ErrorEventInit = ["EventInit"]
# Event = []
# EventCounts = []
# EventInit = []
# EventListenerOptions = []
# EventModifierInit = ["UIEventInit"]
# EventSource = ["EventTarget"]
# EventSourceInit = []
# EventTarget = []
# ExtendableCookieChangeEvent = ["ExtendableEvent"]
# ExtendableCookieChangeEventInit = ["ExtendableEventInit"]
# ExtendableEvent = ["Event"]
# ExtendableEventInit = ["EventInit"]
# ExtendableMessageEvent = ["ExtendableEvent"]
# ExtendableMessageEventInit = ["ExtendableEventInit"]
# External = []
# EyeDropper = []
# FaceDetector = []
# FaceDetectorOptions = []
# FederatedCredential = ["Credential"]
# FederatedCredentialInit = ["CredentialData"]
# FederatedCredentialRequestOptions = []
# Fence = []
# FenceEvent = []
# FencedFrameConfig = []
# FetchEvent = ["ExtendableEvent"]
# FetchEventInit = ["ExtendableEventInit"]
# File = ["Blob"]
# FileList = []
# FilePickerAcceptType = []
# FilePickerOptions = []
# FilePropertyBag = ["BlobPropertyBag"]
# FileReader = ["EventTarget"]
# FileReaderSync = []
# FileSystem = []
# FileSystemCreateWritableOptions = []
# FileSystemDirectoryEntry = ["FileSystemEntry"]
# FileSystemDirectoryHandle = ["FileSystemHandle"]
# FileSystemDirectoryReader = []
# FileSystemEntry = []
# FileSystemFileEntry = ["FileSystemEntry"]
# FileSystemFileHandle = ["FileSystemHandle"]
# FileSystemFlags = []
# FileSystemGetDirectoryOptions = []
# FileSystemGetFileOptions = []
# FileSystemHandle = []
# FileSystemHandlePermissionDescriptor = []
# FileSystemPermissionDescriptor = ["PermissionDescriptor"]
# FileSystemReadWriteOptions = []
# FileSystemRemoveOptions = []
# FileSystemSyncAccessHandle = []
# FileSystemWritableFileStream = ["WritableStream"]
# FlacEncoderConfig = []
# FocusEvent = ["UIEvent"]
# FocusEventInit = ["UIEventInit"]
# FocusOptions = []
# FocusableAreasOption = []
# Font = []
# FontData = []
# FontFace = []
# FontFaceDescriptors = []
# FontFaceFeatures = []
# FontFacePalette = []
# FontFacePalettes = []
# FontFaceSet = ["EventTarget"]
# FontFaceSetLoadEvent = ["Event"]
# FontFaceSetLoadEventInit = ["EventInit"]
# FontFaceVariationAxis = []
# FontFaceVariations = []
# FontMetrics = []
# ForDebuggingOnly = []
# FormData = []
# FormDataEvent = ["Event"]
# FormDataEventInit = ["EventInit"]
# FragmentDirective = []
# FragmentResult = []
# FragmentResultOptions = []
# FullscreenOptions = []
# FunctionParameter = []
# GPU = []
# GPUAdapter = []
# GPUAdapterInfo = []
# GPUBindGroup = []
# GPUBindGroupDescriptor = ["GPUObjectDescriptorBase"]
# GPUBindGroupEntry = []
# GPUBindGroupLayout = []
# GPUBindGroupLayoutDescriptor = ["GPUObjectDescriptorBase"]
# GPUBindGroupLayoutEntry = []
# GPUBlendComponent = []
# GPUBlendState = []
# GPUBuffer = []
# GPUBufferBinding = []
# GPUBufferBindingLayout = []
# GPUBufferDescriptor = ["GPUObjectDescriptorBase"]
# GPUBufferUsage = []
# GPUCanvasConfiguration = []
# GPUCanvasContext = []
# GPUCanvasToneMapping = []
# GPUColorDict = []
# GPUColorTargetState = []
# GPUColorWrite = []
# GPUCommandBuffer = []
# GPUCommandBufferDescriptor = ["GPUObjectDescriptorBase"]
# GPUCommandEncoder = []
# GPUCommandEncoderDescriptor = ["GPUObjectDescriptorBase"]
# GPUCompilationInfo = []
# GPUCompilationMessage = []
# GPUComputePassDescriptor = ["GPUObjectDescriptorBase"]
# GPUComputePassEncoder = []
# GPUComputePassTimestampWrites = []
# GPUComputePipeline = []
# GPUComputePipelineDescriptor = ["GPUPipelineDescriptorBase"]
# GPUCopyExternalImageDestInfo = ["GPUTexelCopyTextureInfo"]
# GPUCopyExternalImageSourceInfo = []
# GPUDepthStencilState = []
# GPUDevice = ["EventTarget"]
# GPUDeviceDescriptor = ["GPUObjectDescriptorBase"]
# GPUDeviceLostInfo = []
# GPUError = []
# GPUExtent3DDict = []
# GPUExternalTexture = []
# GPUExternalTextureBindingLayout = []
# GPUExternalTextureDescriptor = ["GPUObjectDescriptorBase"]
# GPUFragmentState = ["GPUProgrammableStage"]
# GPUInternalError = ["GPUError"]
# GPUMapMode = []
# GPUMultisampleState = []
# GPUObjectDescriptorBase = []
# GPUOrigin2DDict = []
# GPUOrigin3DDict = []
# GPUOutOfMemoryError = ["GPUError"]
# GPUPipelineDescriptorBase = ["GPUObjectDescriptorBase"]
# GPUPipelineError = ["DOMException"]
# GPUPipelineErrorInit = []
# GPUPipelineLayout = []
# GPUPipelineLayoutDescriptor = ["GPUObjectDescriptorBase"]
# GPUPrimitiveState = []
# GPUProgrammableStage = []
# GPUQuerySet = []
# GPUQuerySetDescriptor = ["GPUObjectDescriptorBase"]
# GPUQueue = []
# GPUQueueDescriptor = ["GPUObjectDescriptorBase"]
# GPURenderBundle = []
# GPURenderBundleDescriptor = ["GPUObjectDescriptorBase"]
# GPURenderBundleEncoder = []
# GPURenderBundleEncoderDescriptor = ["GPURenderPassLayout"]
# GPURenderPassColorAttachment = []
# GPURenderPassDepthStencilAttachment = []
# GPURenderPassDescriptor = ["GPUObjectDescriptorBase"]
# GPURenderPassEncoder = []
# GPURenderPassLayout = ["GPUObjectDescriptorBase"]
# GPURenderPassTimestampWrites = []
# GPURenderPipeline = []
# GPURenderPipelineDescriptor = ["GPUPipelineDescriptorBase"]
# GPURequestAdapterOptions = []
# GPUSampler = []
# GPUSamplerBindingLayout = []
# GPUSamplerDescriptor = ["GPUObjectDescriptorBase"]
# GPUShaderModule = []
# GPUShaderModuleCompilationHint = []
# GPUShaderModuleDescriptor = ["GPUObjectDescriptorBase"]
# GPUShaderStage = []
# GPUStencilFaceState = []
# GPUStorageTextureBindingLayout = []
# GPUSupportedFeatures = []
# GPUSupportedLimits = []
# GPUTexelCopyBufferInfo = ["GPUTexelCopyBufferLayout"]
# GPUTexelCopyBufferLayout = []
# GPUTexelCopyTextureInfo = []
# GPUTexture = []
# GPUTextureBindingLayout = []
# GPUTextureDescriptor = ["GPUObjectDescriptorBase"]
# GPUTextureUsage = []
# GPUTextureView = []
# GPUTextureViewDescriptor = ["GPUObjectDescriptorBase"]
# GPUUncapturedErrorEvent = ["Event"]
# GPUUncapturedErrorEventInit = ["EventInit"]
# GPUValidationError = ["GPUError"]
# GPUVertexAttribute = []
# GPUVertexBufferLayout = []
# GPUVertexState = ["GPUProgrammableStage"]
# GainNode = ["AudioNode"]
# GainOptions = ["AudioNodeOptions"]
# Gamepad = []
# GamepadButton = []
# GamepadEffectParameters = []
# GamepadEvent = ["Event"]
# GamepadEventInit = ["EventInit"]
# GamepadHapticActuator = []
# GamepadPose = []
# GamepadTouch = []
# GenerateBidInterestGroup = []
# GenerateBidOutput = []
# GenerateTestReportParameters = []
# Geolocation = []
# GeolocationCoordinates = []
# GeolocationPosition = []
# GeolocationPositionError = []
# GeolocationSensor = ["Sensor"]
# GeolocationSensorOptions = ["SensorOptions"]
# GeolocationSensorReading = []
# GetAnimationsOptions = []
# GetComposedRangesOptions = []
# GetHTMLOptions = []
# GetNotificationOptions = []
# GetRootNodeOptions = []
# Global = []
# GlobalDescriptor = []
# GravitySensor = ["Accelerometer"]
# GroupEffect = []
# Gyroscope = ["Sensor"]
# GyroscopeSensorOptions = ["SensorOptions"]
# HID = ["EventTarget"]
# HIDCollectionInfo = []
# HIDConnectionEvent = ["Event"]
# HIDConnectionEventInit = ["EventInit"]
# HIDDevice = ["EventTarget"]
# HIDDeviceFilter = []
# HIDDeviceRequestOptions = []
# HIDInputReportEvent = ["Event"]
# HIDInputReportEventInit = ["EventInit"]
# HIDReportInfo = []
# HIDReportItem = []
# HMACGetSecretInput = []
# HMACGetSecretOutput = []
# HTMLAllCollection = []
# HTMLAnchorElement = ["HTMLElement"]
# HTMLAreaElement = ["HTMLElement"]
# HTMLAudioElement = ["HTMLMediaElement"]
# HTMLBRElement = ["HTMLElement"]
# HTMLBaseElement = ["HTMLElement"]
# HTMLBodyElement = ["HTMLElement"]
# HTMLButtonElement = ["HTMLElement"]
# HTMLCanvasElement = ["HTMLElement"]
# HTMLCollection = []
# HTMLDListElement = ["HTMLElement"]
# HTMLDataElement = ["HTMLElement"]
# HTMLDataListElement = ["HTMLElement"]
# HTMLDetailsElement = ["HTMLElement"]
# HTMLDialogElement = ["HTMLElement"]
# HTMLDirectoryElement = ["HTMLElement"]
# HTMLDivElement = ["HTMLElement"]
# HTMLElement = ["Element"]
# HTMLEmbedElement = ["HTMLElement"]
# HTMLFencedFrameElement = ["HTMLElement"]
# HTMLFieldSetElement = ["HTMLElement"]
# HTMLFontElement = ["HTMLElement"]
# HTMLFormControlsCollection = ["HTMLCollection"]
# HTMLFormElement = ["HTMLElement"]
# HTMLFrameElement = ["HTMLElement"]
# HTMLFrameSetElement = ["HTMLElement"]
# HTMLHRElement = ["HTMLElement"]
# HTMLHeadElement = ["HTMLElement"]
# HTMLHeadingElement = ["HTMLElement"]
# HTMLHtmlElement = ["HTMLElement"]
# HTMLIFrameElement = ["HTMLElement"]
# HTMLImageElement = ["HTMLElement"]
# HTMLInputElement = ["HTMLElement"]
# HTMLLIElement = ["HTMLElement"]
# HTMLLabelElement = ["HTMLElement"]
# HTMLLegendElement = ["HTMLElement"]
# HTMLLinkElement = ["HTMLElement"]
# HTMLMapElement = ["HTMLElement"]
# HTMLMarqueeElement = ["HTMLElement"]
# HTMLMediaElement = ["HTMLElement"]
# HTMLMenuElement = ["HTMLElement"]
# HTMLMetaElement = ["HTMLElement"]
# HTMLMeterElement = ["HTMLElement"]
# HTMLModElement = ["HTMLElement"]
# HTMLModelElement = ["HTMLElement"]
# HTMLOListElement = ["HTMLElement"]
# HTMLObjectElement = ["HTMLElement"]
# HTMLOptGroupElement = ["HTMLElement"]
# HTMLOptionElement = ["HTMLElement"]
# HTMLOptionsCollection = ["HTMLCollection"]
# HTMLOutputElement = ["HTMLElement"]
# HTMLParagraphElement = ["HTMLElement"]
# HTMLParamElement = ["HTMLElement"]
# HTMLPictureElement = ["HTMLElement"]
# HTMLPortalElement = ["HTMLElement"]
# HTMLPreElement = ["HTMLElement"]
# HTMLProgressElement = ["HTMLElement"]
# HTMLQuoteElement = ["HTMLElement"]
# HTMLScriptElement = ["HTMLElement"]
# HTMLSelectElement = ["HTMLElement"]
# HTMLSlotElement = ["HTMLElement"]
# HTMLSourceElement = ["HTMLElement"]
# HTMLSpanElement = ["HTMLElement"]
# HTMLStyleElement = ["HTMLElement"]
# HTMLTableCaptionElement = ["HTMLElement"]
# HTMLTableCellElement = ["HTMLElement"]
# HTMLTableColElement = ["HTMLElement"]
# HTMLTableElement = ["HTMLElement"]
# HTMLTableRowElement = ["HTMLElement"]
# HTMLTableSectionElement = ["HTMLElement"]
# HTMLTemplateElement = ["HTMLElement"]
# HTMLTextAreaElement = ["HTMLElement"]
# HTMLTimeElement = ["HTMLElement"]
# HTMLTitleElement = ["HTMLElement"]
# HTMLTrackElement = ["HTMLElement"]
# HTMLUListElement = ["HTMLElement"]
# HTMLUnknownElement = ["HTMLElement"]
# HTMLVideoElement = ["HTMLMediaElement"]
# HandwritingDrawing = []
# HandwritingDrawingSegment = []
# HandwritingHints = []
# HandwritingHintsQueryResult = []
# HandwritingModelConstraint = []
# HandwritingPoint = []
# HandwritingPrediction = []
# HandwritingRecognizer = []
# HandwritingRecognizerQueryResult = []
# HandwritingSegment = []
# HandwritingStroke = []
# HashChangeEvent = ["Event"]
# HashChangeEventInit = ["EventInit"]
# Headers = []
# HevcEncoderConfig = []
# Highlight = []
# HighlightHitResult = []
# HighlightRegistry = []
# HighlightsFromPointOptions = []
# History = []
# HkdfParams = ["Algorithm"]
# HmacImportParams = ["Algorithm"]
# HmacKeyAlgorithm = ["KeyAlgorithm"]
# HmacKeyGenParams = ["Algorithm"]
# IDBCursor = []
# IDBCursorWithValue = ["IDBCursor"]
# IDBDatabase = ["EventTarget"]
# IDBDatabaseInfo = []
# IDBFactory = []
# IDBIndex = []
# IDBIndexParameters = []
# IDBKeyRange = []
# IDBObjectStore = []
# IDBObjectStoreParameters = []
# IDBOpenDBRequest = ["IDBRequest"]
# IDBRequest = ["EventTarget"]
# IDBTransaction = ["EventTarget"]
# IDBTransactionOptions = []
# IDBVersionChangeEvent = ["Event"]
# IDBVersionChangeEventInit = ["EventInit"]
# IIRFilterNode = ["AudioNode"]
# IIRFilterOptions = ["AudioNodeOptions"]
# IdentityAssertionResponse = []
# IdentityCredential = ["Credential"]
# IdentityCredentialDisconnectOptions = ["IdentityProviderConfig"]
# IdentityCredentialError = ["DOMException"]
# IdentityCredentialErrorInit = []
# IdentityCredentialRequestOptions = []
# IdentityProvider = []
# IdentityProviderAPIConfig = []
# IdentityProviderAccount = []
# IdentityProviderAccountList = []
# IdentityProviderBranding = []
# IdentityProviderClientMetadata = []
# IdentityProviderConfig = []
# IdentityProviderIcon = []
# IdentityProviderRequestOptions = ["IdentityProviderConfig"]
# IdentityProviderWellKnown = []
# IdentityResolveOptions = []
# IdentityUserInfo = []
# IdleDeadline = []
# IdleDetector = ["EventTarget"]
# IdleOptions = []
# IdleRequestOptions = []
# ImageBitmap = []
# ImageBitmapOptions = []
# ImageBitmapRenderingContext = []
# ImageBitmapRenderingContextSettings = []
# ImageCapture = []
# ImageData = []
# ImageDataSettings = []
# ImageDecodeOptions = []
# ImageDecodeResult = []
# ImageDecoder = []
# ImageDecoderInit = []
# ImageEncodeOptions = []
# ImageResource = []
# ImageTrack = []
# ImageTrackList = []
# ImportNodeOptions = []
# Ink = []
# InkPresenterParam = []
# InkTrailStyle = []
# InputDeviceCapabilities = []
# InputDeviceCapabilitiesInit = []
# InputDeviceInfo = ["MediaDeviceInfo"]
# InputEvent = ["UIEvent"]
# InputEventInit = ["UIEventInit"]
# InstallEvent = ["ExtendableEvent"]
# Instance = []
# IntegrityViolationReportBody = ["ReportBody"]
# InterestGroupBiddingAndScoringScriptRunnerGlobalScope = ["InterestGroupScriptRunnerGlobalScope"]
# InterestGroupBiddingScriptRunnerGlobalScope = ["InterestGroupBiddingAndScoringScriptRunnerGlobalScope"]
# InterestGroupReportingScriptRunnerGlobalScope = ["InterestGroupScriptRunnerGlobalScope"]
# InterestGroupScoringScriptRunnerGlobalScope = ["InterestGroupBiddingAndScoringScriptRunnerGlobalScope"]
# InterestGroupScriptRunnerGlobalScope = []
# IntersectionObserver = []
# IntersectionObserverEntry = []
# IntersectionObserverEntryInit = []
# IntersectionObserverInit = []
# InterventionReportBody = ["ReportBody"]
# IntrinsicSizes = []
# IntrinsicSizesResultOptions = []
# IsInputPendingOptions = []
# ItemDetails = []
# JsonWebKey = []
# KHR_parallel_shader_compile = []
# KeyAlgorithm = []
# KeyFrameRequestEvent = ["Event"]
# KeySystemTrackConfiguration = []
# Keyboard = ["EventTarget"]
# KeyboardEvent = ["UIEvent"]
# KeyboardEventInit = []
# KeyboardLayoutMap = []
# KeyframeAnimationOptions = ["KeyframeEffectOptions"]
# KeyframeEffect = ["AnimationEffect"]
# KeyframeEffectOptions = ["EffectTiming"]
# Landmark = []
# LanguageDetectionResult = []
# LanguageDetector = []
# LanguageDetectorCreateCoreOptions = []
# LanguageDetectorCreateOptions = ["LanguageDetectorCreateCoreOptions"]
# LanguageDetectorDetectOptions = []
# LargestContentfulPaint = ["PerformanceEntry"]
# LaunchParams = []
# LaunchQueue = []
# LayoutChild = []
# LayoutConstraints = []
# LayoutConstraintsOptions = []
# LayoutEdges = []
# LayoutFragment = []
# LayoutOptions = []
# LayoutShift = ["PerformanceEntry"]
# LayoutShiftAttribution = []
# LayoutWorkletGlobalScope = ["WorkletGlobalScope"]
# LinearAccelerationSensor = ["Accelerometer"]
# Location = []
# Lock = []
# LockInfo = []
# LockManager = []
# LockManagerSnapshot = []
# LockOptions = []
# MIDIAccess = ["EventTarget"]
# MIDIConnectionEvent = ["Event"]
# MIDIConnectionEventInit = ["EventInit"]
# MIDIInput = ["MIDIPort"]
# MIDIInputMap = []
# MIDIMessageEvent = ["Event"]
# MIDIMessageEventInit = ["EventInit"]
# MIDIOptions = []
# MIDIOutput = ["MIDIPort"]
# MIDIOutputMap = []
# MIDIPort = ["EventTarget"]
# ML = []
# MLArgMinMaxOptions = ["MLOperatorOptions"]
# MLBatchNormalizationOptions = ["MLOperatorOptions"]
# MLBatchNormalizationSupportLimits = []
# MLBinarySupportLimits = []
# MLClampOptions = ["MLOperatorOptions"]
# MLConcatSupportLimits = []
# MLContext = []
# MLContextLostInfo = []
# MLContextOptions = []
# MLConv2dOptions = ["MLOperatorOptions"]
# MLConv2dSupportLimits = []
# MLConvTranspose2dOptions = ["MLOperatorOptions"]
# MLCumulativeSumOptions = ["MLOperatorOptions"]
# MLDataTypeLimits = []
# MLEluOptions = ["MLOperatorOptions"]
# MLGatherOptions = ["MLOperatorOptions"]
# MLGatherSupportLimits = []
# MLGemmOptions = ["MLOperatorOptions"]
# MLGemmSupportLimits = []
# MLGraph = []
# MLGraphBuilder = []
# MLGruCellOptions = ["MLOperatorOptions"]
# MLGruCellSupportLimits = []
# MLGruOptions = ["MLOperatorOptions"]
# MLGruSupportLimits = []
# MLHardSigmoidOptions = ["MLOperatorOptions"]
# MLInstanceNormalizationOptions = ["MLOperatorOptions"]
# MLLayerNormalizationOptions = ["MLOperatorOptions"]
# MLLeakyReluOptions = ["MLOperatorOptions"]
# MLLinearOptions = ["MLOperatorOptions"]
# MLLogicalNotSupportLimits = []
# MLLstmCellOptions = ["MLOperatorOptions"]
# MLLstmCellSupportLimits = []
# MLLstmOptions = ["MLOperatorOptions"]
# MLLstmSupportLimits = []
# MLNormalizationSupportLimits = []
# MLOpSupportLimits = []
# MLOperand = []
# MLOperandDescriptor = []
# MLOperatorOptions = []
# MLPadOptions = ["MLOperatorOptions"]
# MLPool2dOptions = ["MLOperatorOptions"]
# MLPreluSupportLimits = []
# MLQuantizeDequantizeLinearSupportLimits = []
# MLRankRange = []
# MLReduceOptions = ["MLOperatorOptions"]
# MLResample2dOptions = ["MLOperatorOptions"]
# MLReverseOptions = ["MLOperatorOptions"]
# MLScatterOptions = ["MLOperatorOptions"]
# MLScatterSupportLimits = []
# MLSingleInputSupportLimits = []
# MLSliceOptions = ["MLOperatorOptions"]
# MLSplitOptions = ["MLOperatorOptions"]
# MLSplitSupportLimits = []
# MLTensor = []
# MLTensorDescriptor = ["MLOperandDescriptor"]
# MLTensorLimits = []
# MLTransposeOptions = ["MLOperatorOptions"]
# MLTriangularOptions = ["MLOperatorOptions"]
# MLWhereSupportLimits = []
# Magnetometer = ["Sensor"]
# MagnetometerSensorOptions = ["SensorOptions"]
# ManagedMediaSource = ["MediaSource"]
# ManagedSourceBuffer = ["SourceBuffer"]
# MathMLElement = ["Element"]
# MediaCapabilities = []
# MediaCapabilitiesDecodingInfo = ["MediaCapabilitiesInfo"]
# MediaCapabilitiesEncodingInfo = ["MediaCapabilitiesInfo"]
# MediaCapabilitiesInfo = []
# MediaCapabilitiesKeySystemConfiguration = []
# MediaConfiguration = []
# MediaDecodingConfiguration = ["MediaConfiguration"]
# MediaDeviceInfo = []
# MediaDevices = ["EventTarget"]
# MediaElementAudioSourceNode = ["AudioNode"]
# MediaElementAudioSourceOptions = []
# MediaEncodingConfiguration = ["MediaConfiguration"]
# MediaEncryptedEvent = ["Event"]
# MediaEncryptedEventInit = ["EventInit"]
# MediaError = []
# MediaImage = []
# MediaKeyMessageEvent = ["Event"]
# MediaKeyMessageEventInit = ["EventInit"]
# MediaKeySession = ["EventTarget"]
# MediaKeyStatusMap = []
# MediaKeySystemAccess = []
# MediaKeySystemConfiguration = []
# MediaKeySystemMediaCapability = []
# MediaKeys = []
# MediaKeysPolicy = []
# MediaList = []
# MediaMetadata = []
# MediaMetadataInit = []
# MediaPositionState = []
# MediaQueryList = ["EventTarget"]
# MediaQueryListEvent = ["Event"]
# MediaQueryListEventInit = ["EventInit"]
# MediaRecorder = ["EventTarget"]
# MediaRecorderOptions = []
# MediaSession = []
# MediaSessionActionDetails = []
# MediaSettingsRange = []
# MediaSource = ["EventTarget"]
# MediaSourceHandle = []
# MediaStream = ["EventTarget"]
# MediaStreamAudioDestinationNode = ["AudioNode"]
# MediaStreamAudioSourceNode = ["AudioNode"]
# MediaStreamAudioSourceOptions = []
# MediaStreamConstraints = []
# MediaStreamTrack = ["EventTarget"]
# MediaStreamTrackAudioSourceNode = ["AudioNode"]
# MediaStreamTrackAudioSourceOptions = []
# MediaStreamTrackEvent = ["Event"]
# MediaStreamTrackEventInit = ["EventInit"]
# MediaStreamTrackProcessor = []
# MediaStreamTrackProcessorInit = []
# MediaTrackCapabilities = []
# MediaTrackConstraintSet = []
# MediaTrackConstraints = ["MediaTrackConstraintSet"]
# MediaTrackSettings = []
# MediaTrackSupportedConstraints = []
# Memory = []
# MemoryAttribution = []
# MemoryAttributionContainer = []
# MemoryBreakdownEntry = []
# MemoryDescriptor = []
# MemoryMeasurement = []
# MessageChannel = []
# MessageEvent = ["Event"]
# MessageEventInit = ["EventInit"]
# MessagePort = ["EventTarget"]
# MidiPermissionDescriptor = ["PermissionDescriptor"]
# MimeType = []
# MimeTypeArray = []
# MockCameraConfiguration = ["MockCaptureDeviceConfiguration"]
# MockCaptureDeviceConfiguration = []
# MockCapturePromptResultConfiguration = []
# MockMicrophoneConfiguration = ["MockCaptureDeviceConfiguration"]
# Module = []
# ModuleExportDescriptor = []
# ModuleImportDescriptor = []
# MouseEvent = ["UIEvent"]
# MouseEventInit = ["EventModifierInit"]
# MultiCacheQueryOptions = ["CacheQueryOptions"]
# MutationObserver = []
# MutationObserverInit = []
# MutationRecord = []
# NDEFMakeReadOnlyOptions = []
# NDEFMessage = []
# NDEFMessageInit = []
# NDEFReader = ["EventTarget"]
# NDEFReadingEvent = ["Event"]
# NDEFReadingEventInit = ["EventInit"]
# NDEFRecord = []
# NDEFRecordInit = []
# NDEFScanOptions = []
# NDEFWriteOptions = []
# NamedFlow = ["EventTarget"]
# NamedFlowMap = []
# NamedNodeMap = []
# NavigateEvent = ["Event"]
# NavigateEventInit = ["EventInit"]
# Navigation = ["EventTarget"]
# NavigationActivation = []
# NavigationCurrentEntryChangeEvent = ["Event"]
# NavigationCurrentEntryChangeEventInit = ["EventInit"]
# NavigationDestination = []
# NavigationEvent = ["UIEvent"]
# NavigationEventInit = ["UIEventInit"]
# NavigationHistoryEntry = ["EventTarget"]
# NavigationInterceptOptions = []
# NavigationNavigateOptions = ["NavigationOptions"]
# NavigationOptions = []
# NavigationPreloadManager = []
# NavigationPreloadState = []
# NavigationReloadOptions = ["NavigationOptions"]
# NavigationResult = []
# NavigationTransition = []
# NavigationUpdateCurrentEntryOptions = []
# Navigator = []
# NavigatorLogin = []
# NavigatorManagedData = ["EventTarget"]
# NavigatorUABrandVersion = []
# NavigatorUAData = []
# NetworkInformation = ["EventTarget"]
# Node = ["EventTarget"]
# NodeIterator = []
# NodeList = []
# NotRestoredReasonDetails = []
# NotRestoredReasons = []
# Notification = ["EventTarget"]
# NotificationAction = []
# NotificationEvent = ["ExtendableEvent"]
# NotificationEventInit = ["ExtendableEventInit"]
# NotificationOptions = []
# OES_draw_buffers_indexed = []
# OES_element_index_uint = []
# OES_fbo_render_mipmap = []
# OES_standard_derivatives = []
# OES_texture_float = []
# OES_texture_float_linear = []
# OES_texture_half_float = []
# OES_texture_half_float_linear = []
# OES_vertex_array_object = []
# OTPCredential = ["Credential"]
# OTPCredentialRequestOptions = []
# OVR_multiview2 = []
# Observable = []
# ObservableEventListenerOptions = []
# ObservableInspector = []
# OfflineAudioCompletionEvent = ["Event"]
# OfflineAudioCompletionEventInit = ["EventInit"]
# OfflineAudioContext = ["BaseAudioContext"]
# OfflineAudioContextOptions = []
# OffscreenCanvas = ["EventTarget"]
# OffscreenCanvasRenderingContext2D = []
# OpenFilePickerOptions = ["FilePickerOptions"]
# OptionalEffectTiming = []
# OpusEncoderConfig = []
# OrientationSensor = ["Sensor"]
# OrientationSensorOptions = ["SensorOptions"]
# OscillatorNode = ["AudioScheduledSourceNode"]
# OscillatorOptions = ["AudioNodeOptions"]
# OverconstrainedError = ["DOMException"]
# PADebugModeOptions = []
# PAExtendedHistogramContribution = []
# PAHistogramContribution = []
# PASignalValue = []
# PageRevealEvent = ["Event"]
# PageRevealEventInit = ["EventInit"]
# PageSwapEvent = ["Event"]
# PageSwapEventInit = ["EventInit"]
# PageTransitionEvent = ["Event"]
# PageTransitionEventInit = ["EventInit"]
# PaintRenderingContext2D = []
# PaintRenderingContext2DSettings = []
# PaintSize = []
# PaintWorkletGlobalScope = ["WorkletGlobalScope"]
# PannerNode = ["AudioNode"]
# PannerOptions = ["AudioNodeOptions"]
# PasswordCredential = ["Credential"]
# PasswordCredentialData = ["CredentialData"]
# Path2D = []
# PayerErrors = []
# PaymentCompleteDetails = []
# PaymentCredentialInstrument = []
# PaymentCurrencyAmount = []
# PaymentDetailsBase = []
# PaymentDetailsInit = ["PaymentDetailsBase"]
# PaymentDetailsModifier = []
# PaymentDetailsUpdate = ["PaymentDetailsBase"]
# PaymentEntityLogo = []
# PaymentHandlerResponse = []
# PaymentItem = []
# PaymentManager = []
# PaymentMethodChangeEvent = ["PaymentRequestUpdateEvent"]
# PaymentMethodChangeEventInit = ["PaymentRequestUpdateEventInit"]
# PaymentMethodData = []
# PaymentOptions = []
# PaymentRequest = ["EventTarget"]
# PaymentRequestDetailsUpdate = []
# PaymentRequestEvent = ["ExtendableEvent"]
# PaymentRequestEventInit = ["ExtendableEventInit"]
# PaymentRequestUpdateEvent = ["Event"]
# PaymentRequestUpdateEventInit = ["EventInit"]
# PaymentResponse = ["EventTarget"]
# PaymentShippingOption = []
# PaymentValidationErrors = []
# Pbkdf2Params = ["Algorithm"]
# Performance = ["EventTarget"]
# PerformanceElementTiming = ["PerformanceEntry"]
# PerformanceEntry = []
# PerformanceEventTiming = ["PerformanceEntry"]
# PerformanceLongAnimationFrameTiming = ["PerformanceEntry"]
# PerformanceLongTaskTiming = ["PerformanceEntry"]
# PerformanceMark = ["PerformanceEntry"]
# PerformanceMarkOptions = []
# PerformanceMeasure = ["PerformanceEntry"]
# PerformanceMeasureOptions = []
# PerformanceNavigation = []
# PerformanceNavigationTiming = ["PerformanceResourceTiming"]
# PerformanceObserver = []
# PerformanceObserverCallbackOptions = []
# PerformanceObserverEntryList = []
# PerformanceObserverInit = []
# PerformancePaintTiming = ["PerformanceEntry"]
# PerformanceResourceTiming = ["PerformanceEntry"]
# PerformanceScriptTiming = ["PerformanceEntry"]
# PerformanceServerTiming = []
# PerformanceTiming = []
# PeriodicSyncEvent = ["ExtendableEvent"]
# PeriodicSyncEventInit = ["ExtendableEventInit"]
# PeriodicSyncManager = []
# PeriodicWave = []
# PeriodicWaveConstraints = []
# PeriodicWaveOptions = ["PeriodicWaveConstraints"]
# PermissionDescriptor = []
# PermissionSetParameters = []
# PermissionStatus = ["EventTarget"]
# Permissions = []
# PermissionsPolicy = []
# PermissionsPolicyViolationReportBody = ["ReportBody"]
# PhotoCapabilities = []
# PhotoSettings = []
# PictureInPictureEvent = ["Event"]
# PictureInPictureEventInit = ["EventInit"]
# PictureInPictureWindow = ["EventTarget"]
# PlaneLayout = []
# Plugin = []
# PluginArray = []
# Point2D = []
# PointerEvent = ["MouseEvent"]
# PointerEventInit = ["MouseEventInit"]
# PointerLockOptions = []
# PointerTimeline = ["AnimationTimeline"]
# PointerTimelineOptions = []
# PopStateEvent = ["Event"]
# PopStateEventInit = ["EventInit"]
# PortalActivateEvent = ["Event"]
# PortalActivateEventInit = ["EventInit"]
# PortalActivateOptions = ["StructuredSerializeOptions"]
# PortalHost = ["EventTarget"]
# PositionOptions = []
# PreferenceManager = []
# PreferenceObject = ["EventTarget"]
# Presentation = []
# PresentationAvailability = ["EventTarget"]
# PresentationConnection = ["EventTarget"]
# PresentationConnectionAvailableEvent = ["Event"]
# PresentationConnectionAvailableEventInit = ["EventInit"]
# PresentationConnectionCloseEvent = ["Event"]
# PresentationConnectionCloseEventInit = ["EventInit"]
# PresentationConnectionList = ["EventTarget"]
# PresentationReceiver = []
# PresentationRequest = ["EventTarget"]
# PressureObserver = []
# PressureObserverOptions = []
# PressureRecord = []
# PrivateAggregation = []
# PrivateNetworkAccessPermissionDescriptor = ["PermissionDescriptor"]
# PrivateToken = []
# ProcessingInstruction = ["CharacterData"]
# Profiler = ["EventTarget"]
# ProfilerFrame = []
# ProfilerInitOptions = []
# ProfilerSample = []
# ProfilerStack = []
# ProfilerTrace = []
# ProgressEvent = ["Event"]
# ProgressEventInit = ["EventInit"]
# PromiseRejectionEvent = ["Event"]
# PromiseRejectionEventInit = ["EventInit"]
# PromptResponseObject = []
# PropertyDefinition = []
# ProtectedAudience = []
# ProtectedAudiencePrivateAggregationConfig = []
# ProtectedAudienceUtilities = []
# ProximitySensor = ["Sensor"]
# PublicKeyCredential = ["Credential"]
# PublicKeyCredentialCreationOptions = []
# PublicKeyCredentialCreationOptionsJSON = []
# PublicKeyCredentialDescriptor = []
# PublicKeyCredentialDescriptorJSON = []
# PublicKeyCredentialEntity = []
# PublicKeyCredentialParameters = []
# PublicKeyCredentialRequestOptions = []
# PublicKeyCredentialRequestOptionsJSON = []
# PublicKeyCredentialRpEntity = ["PublicKeyCredentialEntity"]
# PublicKeyCredentialUserEntity = ["PublicKeyCredentialEntity"]
# PublicKeyCredentialUserEntityJSON = []
# PurchaseDetails = []
# PushEvent = ["ExtendableEvent"]
# PushEventInit = ["ExtendableEventInit"]
# PushManager = []
# PushMessageData = []
# PushPermissionDescriptor = ["PermissionDescriptor"]
# PushSubscription = []
# PushSubscriptionChangeEvent = ["ExtendableEvent"]
# PushSubscriptionChangeEventInit = ["ExtendableEventInit"]
# PushSubscriptionJSON = []
# PushSubscriptionOptions = []
# PushSubscriptionOptionsInit = []
# QueryOptions = []
# QueuingStrategy = []
# QueuingStrategyInit = []
# RTCAnswerOptions = ["RTCOfferAnswerOptions"]
# RTCAudioPlayoutStats = ["RTCStats"]
# RTCAudioSourceStats = ["RTCMediaSourceStats"]
# RTCCertificate = []
# RTCCertificateExpiration = []
# RTCCertificateStats = ["RTCStats"]
# RTCCodecStats = ["RTCStats"]
# RTCConfiguration = []
# RTCDTMFSender = ["EventTarget"]
# RTCDTMFToneChangeEvent = ["Event"]
# RTCDTMFToneChangeEventInit = ["EventInit"]
# RTCDataChannel = ["EventTarget"]
# RTCDataChannelEvent = ["Event"]
# RTCDataChannelEventInit = ["EventInit"]
# RTCDataChannelInit = []
# RTCDataChannelStats = ["RTCStats"]
# RTCDtlsFingerprint = []
# RTCDtlsTransport = ["EventTarget"]
# RTCEncodedAudioFrame = []
# RTCEncodedAudioFrameMetadata = ["RTCEncodedFrameMetadata"]
# RTCEncodedAudioFrameOptions = []
# RTCEncodedFrameMetadata = []
# RTCEncodedVideoFrame = []
# RTCEncodedVideoFrameMetadata = ["RTCEncodedFrameMetadata"]
# RTCEncodedVideoFrameOptions = []
# RTCError = ["DOMException"]
# RTCErrorEvent = ["Event"]
# RTCErrorEventInit = ["EventInit"]
# RTCErrorInit = []
# RTCIceCandidate = []
# RTCIceCandidateInit = []
# RTCIceCandidatePair = []
# RTCIceCandidatePairStats = ["RTCStats"]
# RTCIceCandidateStats = ["RTCStats"]
# RTCIceGatherOptions = []
# RTCIceParameters = []
# RTCIceServer = []
# RTCIceTransport = ["EventTarget"]
# RTCIdentityAssertion = []
# RTCIdentityAssertionResult = []
# RTCIdentityProvider = []
# RTCIdentityProviderDetails = []
# RTCIdentityProviderGlobalScope = ["WorkerGlobalScope"]
# RTCIdentityProviderOptions = []
# RTCIdentityProviderRegistrar = []
# RTCIdentityValidationResult = []
# RTCInboundRtpStreamStats = ["RTCReceivedRtpStreamStats"]
# RTCLocalIceCandidateInit = ["RTCIceCandidateInit"]
# RTCLocalSessionDescriptionInit = []
# RTCMediaSourceStats = ["RTCStats"]
# RTCOfferAnswerOptions = []
# RTCOfferOptions = []
# RTCOutboundRtpStreamStats = ["RTCSentRtpStreamStats"]
# RTCPeerConnection = ["EventTarget"]
# RTCPeerConnectionIceErrorEvent = ["Event"]
# RTCPeerConnectionIceErrorEventInit = ["EventInit"]
# RTCPeerConnectionIceEvent = ["Event"]
# RTCPeerConnectionIceEventInit = ["EventInit"]
# RTCPeerConnectionStats = ["RTCStats"]
# RTCReceivedRtpStreamStats = ["RTCRtpStreamStats"]
# RTCRemoteInboundRtpStreamStats = ["RTCReceivedRtpStreamStats"]
# RTCRemoteOutboundRtpStreamStats = ["RTCSentRtpStreamStats"]
# RTCRtcpParameters = []
# RTCRtpCapabilities = []
# RTCRtpCodec = []
# RTCRtpCodecParameters = ["RTCRtpCodec"]
# RTCRtpCodingParameters = []
# RTCRtpContributingSource = []
# RTCRtpEncodingParameters = ["RTCRtpCodingParameters"]
# RTCRtpHeaderExtensionCapability = []
# RTCRtpHeaderExtensionParameters = []
# RTCRtpParameters = []
# RTCRtpReceiveParameters = ["RTCRtpParameters"]
# RTCRtpReceiver = []
# RTCRtpScriptTransform = []
# RTCRtpScriptTransformer = ["EventTarget"]
# RTCRtpSendParameters = ["RTCRtpParameters"]
# RTCRtpSender = []
# RTCRtpStreamStats = ["RTCStats"]
# RTCRtpSynchronizationSource = ["RTCRtpContributingSource"]
# RTCRtpTransceiver = []
# RTCRtpTransceiverInit = []
# RTCSctpTransport = ["EventTarget"]
# RTCSentRtpStreamStats = ["RTCRtpStreamStats"]
# RTCSessionDescription = []
# RTCSessionDescriptionInit = []
# RTCSetParameterOptions = []
# RTCStats = []
# RTCStatsReport = []
# RTCTrackEvent = ["Event"]
# RTCTrackEventInit = ["EventInit"]
# RTCTransformEvent = ["Event"]
# RTCTransportStats = ["RTCStats"]
# RTCVideoSourceStats = ["RTCMediaSourceStats"]
# RadioNodeList = ["NodeList"]
# Range = ["AbstractRange"]
# ReadOptions = ["GeolocationSensorOptions"]
# ReadableByteStreamController = []
# ReadableStream = []
# ReadableStreamBYOBReader = []
# ReadableStreamBYOBReaderReadOptions = []
# ReadableStreamBYOBRequest = []
# ReadableStreamDefaultController = []
# ReadableStreamDefaultReader = []
# ReadableStreamGetReaderOptions = []
# ReadableStreamIteratorOptions = []
# ReadableStreamReadResult = []
# ReadableWritablePair = []
# RealTimeContribution = []
# RealTimeReporting = []
# RegistrationOptions = []
# RegistrationResponseJSON = []
# RelatedApplication = []
# RelativeOrientationSensor = ["OrientationSensor"]
# RemotePlayback = ["EventTarget"]
# Report = []
# ReportBody = []
# ReportResultBrowserSignals = ["ReportingBrowserSignals"]
# ReportWinBrowserSignals = ["ReportingBrowserSignals"]
# ReportingBrowserSignals = []
# ReportingObserver = []
# ReportingObserverOptions = []
# Request = []
# RequestDeviceOptions = []
# RequestInit = []
# ResizeObserver = []
# ResizeObserverEntry = []
# ResizeObserverOptions = []
# ResizeObserverSize = []
# Response = []
# ResponseInit = []
# RestrictionTarget = []
# Rewriter = []
# RewriterCreateCoreOptions = []
# RewriterCreateOptions = ["RewriterCreateCoreOptions"]
# RewriterRewriteOptions = []
# RouterCondition = []
# RouterRule = []
# RouterSourceDict = []
# RsaHashedImportParams = ["Algorithm"]
# RsaHashedKeyAlgorithm = ["RsaKeyAlgorithm"]
# RsaHashedKeyGenParams = ["RsaKeyGenParams"]
# RsaKeyAlgorithm = ["KeyAlgorithm"]
# RsaKeyGenParams = ["Algorithm"]
# RsaOaepParams = ["Algorithm"]
# RsaOtherPrimesInfo = []
# RsaPssParams = ["Algorithm"]
# SFrameTransform = ["EventTarget"]
# SFrameTransformErrorEvent = ["Event"]
# SFrameTransformErrorEventInit = ["EventInit"]
# SFrameTransformOptions = []
# SVGAElement = ["SVGGraphicsElement"]
# SVGAngle = []
# SVGAnimateElement = ["SVGAnimationElement"]
# SVGAnimateMotionElement = ["SVGAnimationElement"]
# SVGAnimateTransformElement = ["SVGAnimationElement"]
# SVGAnimatedAngle = []
# SVGAnimatedBoolean = []
# SVGAnimatedEnumeration = []
# SVGAnimatedInteger = []
# SVGAnimatedLength = []
# SVGAnimatedLengthList = []
# SVGAnimatedNumber = []
# SVGAnimatedNumberList = []
# SVGAnimatedPreserveAspectRatio = []
# SVGAnimatedRect = []
# SVGAnimatedString = []
# SVGAnimatedTransformList = []
# SVGAnimationElement = ["SVGElement"]
# SVGBoundingBoxOptions = []
# SVGCircleElement = ["SVGGeometryElement"]
# SVGClipPathElement = ["SVGElement"]
# SVGComponentTransferFunctionElement = ["SVGElement"]
# SVGDefsElement = ["SVGGraphicsElement"]
# SVGDescElement = ["SVGElement"]
# SVGDiscardElement = ["SVGAnimationElement"]
# SVGElement = ["Element"]
# SVGEllipseElement = ["SVGGeometryElement"]
# SVGFEBlendElement = ["SVGElement"]
# SVGFEColorMatrixElement = ["SVGElement"]
# SVGFEComponentTransferElement = ["SVGElement"]
# SVGFECompositeElement = ["SVGElement"]
# SVGFEConvolveMatrixElement = ["SVGElement"]
# SVGFEDiffuseLightingElement = ["SVGElement"]
# SVGFEDisplacementMapElement = ["SVGElement"]
# SVGFEDistantLightElement = ["SVGElement"]
# SVGFEDropShadowElement = ["SVGElement"]
# SVGFEFloodElement = ["SVGElement"]
# SVGFEFuncAElement = ["SVGComponentTransferFunctionElement"]
# SVGFEFuncBElement = ["SVGComponentTransferFunctionElement"]
# SVGFEFuncGElement = ["SVGComponentTransferFunctionElement"]
# SVGFEFuncRElement = ["SVGComponentTransferFunctionElement"]
# SVGFEGaussianBlurElement = ["SVGElement"]
# SVGFEImageElement = ["SVGElement"]
# SVGFEMergeElement = ["SVGElement"]
# SVGFEMergeNodeElement = ["SVGElement"]
# SVGFEMorphologyElement = ["SVGElement"]
# SVGFEOffsetElement = ["SVGElement"]
# SVGFEPointLightElement = ["SVGElement"]
# SVGFESpecularLightingElement = ["SVGElement"]
# SVGFESpotLightElement = ["SVGElement"]
# SVGFETileElement = ["SVGElement"]
# SVGFETurbulenceElement = ["SVGElement"]
# SVGFilterElement = ["SVGElement"]
# SVGForeignObjectElement = ["SVGGraphicsElement"]
# SVGGElement = ["SVGGraphicsElement"]
# SVGGeometryElement = ["SVGGraphicsElement"]
# SVGGradientElement = ["SVGElement"]
# SVGGraphicsElement = ["SVGElement"]
# SVGImageElement = ["SVGGraphicsElement"]
# SVGLength = []
# SVGLengthList = []
# SVGLineElement = ["SVGGeometryElement"]
# SVGLinearGradientElement = ["SVGGradientElement"]
# SVGMPathElement = ["SVGElement"]
# SVGMarkerElement = ["SVGElement"]
# SVGMaskElement = ["SVGElement"]
# SVGMetadataElement = ["SVGElement"]
# SVGNumber = []
# SVGNumberList = []
# SVGPathDataSettings = []
# SVGPathElement = ["SVGGeometryElement"]
# SVGPathSegment = []
# SVGPatternElement = ["SVGElement"]
# SVGPointList = []
# SVGPolygonElement = ["SVGGeometryElement"]
# SVGPolylineElement = ["SVGGeometryElement"]
# SVGPreserveAspectRatio = []
# SVGRadialGradientElement = ["SVGGradientElement"]
# SVGRectElement = ["SVGGeometryElement"]
# SVGSVGElement = ["SVGGraphicsElement"]
# SVGScriptElement = ["SVGElement"]
# SVGSetElement = ["SVGAnimationElement"]
# SVGStopElement = ["SVGElement"]
# SVGStringList = []
# SVGStyleElement = ["SVGElement"]
# SVGSwitchElement = ["SVGGraphicsElement"]
# SVGSymbolElement = ["SVGGraphicsElement"]
# SVGTSpanElement = ["SVGTextPositioningElement"]
# SVGTextContentElement = ["SVGGraphicsElement"]
# SVGTextElement = ["SVGTextPositioningElement"]
# SVGTextPathElement = ["SVGTextContentElement"]
# SVGTextPositioningElement = ["SVGTextContentElement"]
# SVGTitleElement = ["SVGElement"]
# SVGTransform = []
# SVGTransformList = []
# SVGUnitTypes = []
# SVGUseElement = ["SVGGraphicsElement"]
# SVGUseElementShadowRoot = ["ShadowRoot"]
# SVGViewElement = ["SVGElement"]
# Sanitizer = []
# SanitizerAttributeNamespace = []
# SanitizerConfig = []
# SanitizerElementNamespace = []
# SanitizerElementNamespaceWithAttributes = ["SanitizerElementNamespace"]
# SaveFilePickerOptions = ["FilePickerOptions"]
# Scheduler = []
# SchedulerPostTaskOptions = []
# Scheduling = []
# ScoreAdOutput = []
# ScoringBrowserSignals = []
# Screen = []
# ScreenDetailed = ["Screen"]
# ScreenDetails = ["EventTarget"]
# ScreenOrientation = ["EventTarget"]
# ScriptProcessorNode = ["AudioNode"]
# ScriptingPolicyReportBody = ["ReportBody"]
# ScrollIntoViewOptions = ["ScrollOptions"]
# ScrollOptions = []
# ScrollTimeline = ["AnimationTimeline"]
# ScrollTimelineOptions = []
# ScrollToOptions = ["ScrollOptions"]
# SecurePaymentConfirmationRequest = []
# SecurityPolicyViolationEvent = ["Event"]
# SecurityPolicyViolationEventInit = ["EventInit"]
# Selection = []
# Sensor = ["EventTarget"]
# SensorErrorEvent = ["Event"]
# SensorErrorEventInit = ["EventInit"]
# SensorOptions = []
# SequenceEffect = ["GroupEffect"]
# Serial = ["EventTarget"]
# SerialInputSignals = []
# SerialOptions = []
# SerialOutputSignals = []
# SerialPort = ["EventTarget"]
# SerialPortFilter = []
# SerialPortInfo = []
# SerialPortRequestOptions = []
# ServiceWorker = ["EventTarget"]
# ServiceWorkerContainer = ["EventTarget"]
# ServiceWorkerGlobalScope = ["WorkerGlobalScope"]
# ServiceWorkerRegistration = ["EventTarget"]
# SetHTMLOptions = []
# SetHTMLUnsafeOptions = []
# ShadowAnimation = ["Animation"]
# ShadowRoot = ["DocumentFragment"]
# ShadowRootInit = []
# ShareData = []
# SharedStorage = []
# SharedStorageAppendMethod = ["SharedStorageModifierMethod"]
# SharedStorageClearMethod = ["SharedStorageModifierMethod"]
# SharedStorageDeleteMethod = ["SharedStorageModifierMethod"]
# SharedStorageModifierMethod = []
# SharedStorageModifierMethodOptions = []
# SharedStoragePrivateAggregationConfig = []
# SharedStorageRunOperationMethodOptions = []
# SharedStorageSetMethod = ["SharedStorageModifierMethod"]
# SharedStorageSetMethodOptions = ["SharedStorageModifierMethodOptions"]
# SharedStorageUrlWithMetadata = []
# SharedStorageWorklet = ["Worklet"]
# SharedStorageWorkletGlobalScope = ["WorkletGlobalScope"]
# SharedStorageWorkletNavigator = []
# SharedStorageWorkletOptions = ["WorkletOptions"]
# SharedWorker = ["EventTarget"]
# SharedWorkerGlobalScope = ["WorkerGlobalScope"]
# SharedWorkerOptions = ["WorkerOptions"]
# ShowPopoverOptions = []
# SnapEvent = ["Event"]
# SnapEventInit = ["EventInit"]
# SourceBuffer = ["EventTarget"]
# SourceBufferList = ["EventTarget"]
# SpatialNavigationSearchOptions = []
# SpeechGrammar = []
# SpeechGrammarList = []
# SpeechRecognition = ["EventTarget"]
# SpeechRecognitionAlternative = []
# SpeechRecognitionErrorEvent = ["Event"]
# SpeechRecognitionErrorEventInit = ["EventInit"]
# SpeechRecognitionEvent = ["Event"]
# SpeechRecognitionEventInit = ["EventInit"]
# SpeechRecognitionOptions = []
# SpeechRecognitionPhrase = []
# SpeechRecognitionPhraseList = []
# SpeechRecognitionResult = []
# SpeechRecognitionResultList = []
# SpeechSynthesis = ["EventTarget"]
# SpeechSynthesisErrorEvent = ["SpeechSynthesisEvent"]
# SpeechSynthesisErrorEventInit = ["SpeechSynthesisEventInit"]
# SpeechSynthesisEvent = ["Event"]
# SpeechSynthesisEventInit = ["EventInit"]
# SpeechSynthesisUtterance = ["EventTarget"]
# SpeechSynthesisVoice = []
# StartViewTransitionOptions = []
# StaticRange = ["AbstractRange"]
# StaticRangeInit = []
# StereoPannerNode = ["AudioNode"]
# StereoPannerOptions = ["AudioNodeOptions"]
# Storage = []
# StorageAccessHandle = []
# StorageAccessTypes = []
# StorageBucket = []
# StorageBucketManager = []
# StorageBucketOptions = []
# StorageEstimate = []
# StorageEvent = ["Event"]
# StorageEventInit = ["EventInit"]
# StorageInterestGroup = ["AuctionAdInterestGroup"]
# StorageManager = []
# StreamPipeOptions = []
# StructuredSerializeOptions = []
# StylePropertyMap = ["StylePropertyMapReadOnly"]
# StylePropertyMapReadOnly = []
# StyleSheet = []
# StyleSheetList = []
# SubmitEvent = ["Event"]
# SubmitEventInit = ["EventInit"]
# SubscribeOptions = []
# Subscriber = []
# SubscriptionObserver = []
# SubtleCrypto = []
# Summarizer = []
# SummarizerCreateCoreOptions = []
# SummarizerCreateOptions = ["SummarizerCreateCoreOptions"]
# SummarizerSummarizeOptions = []
# SvcOutputMetadata = []
# SyncEvent = ["ExtendableEvent"]
# SyncEventInit = ["ExtendableEventInit"]
# SyncManager = []
# Table = []
# TableDescriptor = []
# TaskAttributionTiming = ["PerformanceEntry"]
# TaskController = ["AbortController"]
# TaskControllerInit = []
# TaskPriorityChangeEvent = ["Event"]
# TaskPriorityChangeEventInit = ["EventInit"]
# TaskSignal = ["AbortSignal"]
# TaskSignalAnyInit = []
# TestUtils = []
# Text = ["CharacterData"]
# TextDecodeOptions = []
# TextDecoder = []
# TextDecoderOptions = []
# TextDecoderStream = []
# TextDetector = []
# TextEncoder = []
# TextEncoderEncodeIntoResult = []
# TextEncoderStream = []
# TextEvent = ["UIEvent"]
# TextFormat = []
# TextFormatInit = []
# TextFormatUpdateEvent = ["Event"]
# TextFormatUpdateEventInit = ["EventInit"]
# TextMetrics = []
# TextTrack = ["EventTarget"]
# TextTrackCue = ["EventTarget"]
# TextTrackCueList = []
# TextTrackList = ["EventTarget"]
# TextUpdateEvent = ["Event"]
# TextUpdateEventInit = ["EventInit"]
# TimeEvent = ["Event"]
# TimeRanges = []
# TimelineRangeOffset = []
# ToggleEvent = ["Event"]
# ToggleEventInit = ["EventInit"]
# TogglePopoverOptions = ["ShowPopoverOptions"]
# TokenBinding = []
# TopLevelStorageAccessPermissionDescriptor = ["PermissionDescriptor"]
# Touch = []
# TouchEvent = ["UIEvent"]
# TouchEventInit = ["EventModifierInit"]
# TouchInit = []
# TouchList = []
# TrackEvent = ["Event"]
# TrackEventInit = ["EventInit"]
# TransformStream = []
# TransformStreamDefaultController = []
# Transformer = []
# TransitionEvent = ["Event"]
# TransitionEventInit = ["EventInit"]
# Translator = []
# TranslatorCreateCoreOptions = []
# TranslatorCreateOptions = ["TranslatorCreateCoreOptions"]
# TranslatorTranslateOptions = []
# TreeWalker = []
# TrustedHTML = []
# TrustedScript = []
# TrustedScriptURL = []
# TrustedTypePolicy = []
# TrustedTypePolicyFactory = []
# TrustedTypePolicyOptions = []
# UADataValues = []
# UALowEntropyJSON = []
# UIEvent = ["Event"]
# UIEventInit = []
# ULongRange = []
# URL = []
# URLPattern = []
# URLPatternComponentResult = []
# URLPatternInit = []
# URLPatternOptions = []
# URLPatternResult = []
# URLSearchParams = []
# USB = ["EventTarget"]
# USBAlternateInterface = []
# USBBlocklistEntry = []
# USBConfiguration = []
# USBConnectionEvent = ["Event"]
# USBConnectionEventInit = ["EventInit"]
# USBControlTransferParameters = []
# USBDevice = []
# USBDeviceFilter = []
# USBDeviceRequestOptions = []
# USBEndpoint = []
# USBInTransferResult = []
# USBInterface = []
# USBIsochronousInTransferPacket = []
# USBIsochronousInTransferResult = []
# USBIsochronousOutTransferPacket = []
# USBIsochronousOutTransferResult = []
# USBOutTransferResult = []
# USBPermissionDescriptor = ["PermissionDescriptor"]
# USBPermissionResult = ["PermissionStatus"]
# USBPermissionStorage = []
# UncalibratedMagnetometer = ["Sensor"]
# UnderlyingSink = []
# UnderlyingSource = []
# UnknownCredentialOptions = []
# UserActivation = []
# VTTCue = ["TextTrackCue"]
# VTTRegion = []
# ValidityState = []
# ValidityStateFlags = []
# ValueEvent = ["Event"]
# ValueEventInit = ["EventInit"]
# VideoColorSpace = []
# VideoColorSpaceInit = []
# VideoConfiguration = []
# VideoDecoder = ["EventTarget"]
# VideoDecoderConfig = []
# VideoDecoderInit = []
# VideoDecoderSupport = []
# VideoEncoder = ["EventTarget"]
# VideoEncoderConfig = []
# VideoEncoderEncodeOptions = []
# VideoEncoderEncodeOptionsForAv1 = []
# VideoEncoderEncodeOptionsForAvc = []
# VideoEncoderEncodeOptionsForHevc = []
# VideoEncoderEncodeOptionsForVp9 = []
# VideoEncoderInit = []
# VideoEncoderSupport = []
# VideoFrame = []
# VideoFrameBufferInit = []
# VideoFrameCallbackMetadata = []
# VideoFrameCopyToOptions = []
# VideoFrameInit = []
# VideoFrameMetadata = []
# VideoPlaybackQuality = []
# VideoTrack = []
# VideoTrackGenerator = []
# VideoTrackList = ["EventTarget"]
# ViewTimeline = ["ScrollTimeline"]
# ViewTimelineOptions = []
# ViewTransition = []
# ViewTransitionTypeSet = []
# Viewport = []
# VirtualKeyboard = ["EventTarget"]
# VisibilityStateEntry = ["PerformanceEntry"]
# VisualViewport = ["EventTarget"]
# WEBGL_blend_equation_advanced_coherent = []
# WEBGL_clip_cull_distance = []
# WEBGL_color_buffer_float = []
# WEBGL_compressed_texture_astc = []
# WEBGL_compressed_texture_etc = []
# WEBGL_compressed_texture_etc1 = []
# WEBGL_compressed_texture_pvrtc = []
# WEBGL_compressed_texture_s3tc = []
# WEBGL_compressed_texture_s3tc_srgb = []
# WEBGL_debug_renderer_info = []
# WEBGL_debug_shaders = []
# WEBGL_depth_texture = []
# WEBGL_draw_buffers = []
# WEBGL_draw_instanced_base_vertex_base_instance = []
# WEBGL_lose_context = []
# WEBGL_multi_draw = []
# WEBGL_multi_draw_instanced_base_vertex_base_instance = []
# WEBGL_provoking_vertex = []
# WGSLLanguageFeatures = []
# WakeLock = []
# WakeLockSentinel = ["EventTarget"]
# WatchAdvertisementsOptions = []
# WaveShaperNode = ["AudioNode"]
# WaveShaperOptions = ["AudioNodeOptions"]
# WebAssembly = []
# WebAssemblyInstantiatedSource = []
# WebGL2RenderingContext = []
# WebGLActiveInfo = []
# WebGLBuffer = ["WebGLObject"]
# WebGLContextAttributes = []
# WebGLContextEvent = ["Event"]
# WebGLContextEventInit = ["EventInit"]
# WebGLFramebuffer = ["WebGLObject"]
# WebGLObject = []
# WebGLProgram = ["WebGLObject"]
# WebGLQuery = ["WebGLObject"]
# WebGLRenderbuffer = ["WebGLObject"]
# WebGLRenderingContext = []
# WebGLSampler = ["WebGLObject"]
# WebGLShader = ["WebGLObject"]
# WebGLShaderPrecisionFormat = []
# WebGLSync = ["WebGLObject"]
# WebGLTexture = ["WebGLObject"]
# WebGLTimerQueryEXT = ["WebGLObject"]
# WebGLTransformFeedback = ["WebGLObject"]
# WebGLUniformLocation = []
# WebGLVertexArrayObject = ["WebGLObject"]
# WebGLVertexArrayObjectOES = ["WebGLObject"]
# WebSocket = ["EventTarget"]
# WebTransport = []
# WebTransportBidirectionalStream = []
# WebTransportCloseInfo = []
# WebTransportConnectionStats = []
# WebTransportDatagramDuplexStream = []
# WebTransportDatagramStats = []
# WebTransportDatagramsWritable = ["WritableStream"]
# WebTransportError = ["DOMException"]
# WebTransportErrorOptions = []
# WebTransportHash = []
# WebTransportOptions = []
# WebTransportReceiveStream = ["ReadableStream"]
# WebTransportReceiveStreamStats = []
# WebTransportSendGroup = []
# WebTransportSendOptions = []
# WebTransportSendStream = ["WritableStream"]
# WebTransportSendStreamOptions = ["WebTransportSendOptions"]
# WebTransportSendStreamStats = []
# WebTransportWriter = ["WritableStreamDefaultWriter"]
# WheelEvent = ["MouseEvent"]
# WheelEventInit = ["MouseEventInit"]
# Window = ["EventTarget"]
# WindowClient = ["Client"]
# WindowControlsOverlay = ["EventTarget"]
# WindowControlsOverlayGeometryChangeEvent = ["Event"]
# WindowControlsOverlayGeometryChangeEventInit = ["EventInit"]
# WindowPostMessageOptions = ["StructuredSerializeOptions"]
# Worker = ["EventTarget"]
# WorkerGlobalScope = ["EventTarget"]
# WorkerLocation = []
# WorkerNavigator = []
# WorkerOptions = []
# Worklet = []
# WorkletAnimation = ["Animation"]
# WorkletAnimationEffect = []
# WorkletGlobalScope = []
# WorkletGroupEffect = []
# WorkletOptions = []
# WritableStream = []
# WritableStreamDefaultController = []
# WritableStreamDefaultWriter = []
# WriteParams = []
# Writer = []
# WriterCreateCoreOptions = []
# WriterCreateOptions = ["WriterCreateCoreOptions"]
# WriterWriteOptions = []
# XMLDocument = ["Document"]
# XMLHttpRequest = ["XMLHttpRequestEventTarget"]
# XMLHttpRequestEventTarget = ["EventTarget"]
# XMLHttpRequestUpload = ["XMLHttpRequestEventTarget"]
# XMLSerializer = []
# XPathEvaluator = []
# XPathExpression = []
# XPathResult = []
# XRAnchor = []
# XRAnchorSet = []
# XRBoundedReferenceSpace = ["XRReferenceSpace"]
# XRCPUDepthInformation = ["XRDepthInformation"]
# XRCamera = []
# XRCompositionLayer = ["XRLayer"]
# XRCubeLayer = ["XRCompositionLayer"]
# XRCubeLayerInit = ["XRLayerInit"]
# XRCylinderLayer = ["XRCompositionLayer"]
# XRCylinderLayerInit = ["XRLayerInit"]
# XRDOMOverlayInit = []
# XRDOMOverlayState = []
# XRDepthInformation = []
# XRDepthStateInit = []
# XREquirectLayer = ["XRCompositionLayer"]
# XREquirectLayerInit = ["XRLayerInit"]
# XRFrame = []
# XRHand = []
# XRHitTestOptionsInit = []
# XRHitTestResult = []
# XRHitTestSource = []
# XRInputSource = []
# XRInputSourceArray = []
# XRInputSourceEvent = ["Event"]
# XRInputSourceEventInit = ["EventInit"]
# XRInputSourcesChangeEvent = ["Event"]
# XRInputSourcesChangeEventInit = ["EventInit"]
# XRJointPose = ["XRPose"]
# XRJointSpace = ["XRSpace"]
# XRLayer = ["EventTarget"]
# XRLayerEvent = ["Event"]
# XRLayerEventInit = ["EventInit"]
# XRLayerInit = []
# XRLightEstimate = []
# XRLightProbe = ["EventTarget"]
# XRLightProbeInit = []
# XRMediaBinding = []
# XRMediaCylinderLayerInit = ["XRMediaLayerInit"]
# XRMediaEquirectLayerInit = ["XRMediaLayerInit"]
# XRMediaLayerInit = []
# XRMediaQuadLayerInit = ["XRMediaLayerInit"]
# XRMesh = []
# XRMeshSet = []
# XRPermissionDescriptor = ["PermissionDescriptor"]
# XRPermissionStatus = ["PermissionStatus"]
# XRPlane = []
# XRPlaneSet = []
# XRPose = []
# XRProjectionLayer = ["XRCompositionLayer"]
# XRProjectionLayerInit = []
# XRQuadLayer = ["XRCompositionLayer"]
# XRQuadLayerInit = ["XRLayerInit"]
# XRRay = []
# XRRayDirectionInit = []
# XRReferenceSpace = ["XRSpace"]
# XRReferenceSpaceEvent = ["Event"]
# XRReferenceSpaceEventInit = ["EventInit"]
# XRRenderState = []
# XRRenderStateInit = []
# XRRigidTransform = []
# XRSession = ["EventTarget"]
# XRSessionEvent = ["Event"]
# XRSessionEventInit = ["EventInit"]
# XRSessionInit = []
# XRSessionSupportedPermissionDescriptor = ["PermissionDescriptor"]
# XRSpace = ["EventTarget"]
# XRSubImage = []
# XRSystem = ["EventTarget"]
# XRTransientInputHitTestOptionsInit = []
# XRTransientInputHitTestResult = []
# XRTransientInputHitTestSource = []
# XRView = []
# XRViewerPose = ["XRPose"]
# XRViewport = []
# XRWebGLBinding = []
# XRWebGLDepthInformation = ["XRDepthInformation"]
# XRWebGLLayer = ["XRLayer"]
# XRWebGLLayerInit = []
# XRWebGLSubImage = ["XRSubImage"]
# XSLTProcessor = []
# console = []
